name: Send Email with Fake Newman Report and Screenshot

on:
  workflow_dispatch:
    inputs:
      recipient_email:
        description: "Recipient email address"
        required: true

jobs:
  send-email:
    runs-on: ubuntu-latest

    steps:
      # Step to install Puppeteer
      - name: Install Puppeteer
        run: |
          npm install puppeteer

      # Step to generate a fake Newman report that mimics htmlextra report structure
      - name: Generate Fake Newman htmlextra Report
        run: |
          echo "<html>
            <head>
              <title>Newman Test Report</title>
              <style>
                body { font-family: Arial, sans-serif; }
                h1 { color: #333; }
                .summary { border-collapse: collapse; width: 100%; }
                .summary th, .summary td { border: 1px solid #ddd; padding: 8px; }
                .summary th { background-color: #f2f2f2; }
              </style>
            </head>
            <body>
              <h1>Newman Test Report</h1>
              <h2>Summary</h2>
              <table class='summary'>
                <tr>
                  <th>Total Tests</th>
                  <th>Passed</th>
                  <th>Failed</th>
                  <th>Skipped</th>
                </tr>
                <tr>
                  <td>20</td>
                  <td>18</td>
                  <td>2</td>
                  <td>0</td>
                </tr>
              </table>
              <h2>Test Results</h2>
              <p>Details of the test execution can go here.</p>
              <h3>Test Cases</h3>
              <ul>
                <li>GET /api/test1 - Passed</li>
                <li>POST /api/test2 - Failed</li>
                <li>GET /api/test3 - Passed</li>
              </ul>
            </body>
          </html>" > fake_report.html

      # Step to take a screenshot of the rendered HTML using Puppeteer
      - name: Take Screenshot of Fake Report
        run: |
          node -e "
          const puppeteer = require('puppeteer');
          (async () => {
            const
